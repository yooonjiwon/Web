package com.seoul.memberservlet;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.seoul.common.Util;
import com.seoul.dto.Member;
import com.seoul.service.MemberService;

@WebServlet(value = "/mypage.action")
public class MemberUpdateServlet extends HttpServlet{
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		
//		//로그인 여부 확인 -> 로그인 하지 않은 경우 로그인 화면으로 이동
//				HttpSession session = req.getSession();
//				if(session.getAttribute("loginuser")==null) {
//					resp.sendRedirect("/demoweb/account/login.action");
//					return; 
//				}
		
		//요청데이터 읽기 (memberid)
		String smemberId =req.getParameter("memberId");
		
		
		// memberid로 데이터 조회 (MemberService 사용)
		MemberService memberService = new MemberService();
		Member member = memberService.findMemberByMemberId(smemberId);
		if (smemberId == null) {
			resp.sendRedirect("/seoul/mypage.action");
			return;
		}
		
		//조회결과를 request 객체에 저장
		req.setAttribute("member", member);
		
		//mypage.jsp로 이동
		RequestDispatcher dispatcher = req.getRequestDispatcher("/seoul/mypage.jsp");
		dispatcher.forward(req, resp);
	}
	
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		  //브라우저에서 전송된 데이터 읽기
		String smemberId =req.getParameter("memberId");
		String name = req.getParameter("name");
		String email =req.getParameter("email"); // 방법2 브라우저에서 가져오는 법 - 코드 분산
		String birthday = req.getParameter("birthday");
		String country_code = req.getParameter("country_code");
		String phone = req.getParameter("phone");
		String gender = req.getParameter("gender");
		String nation = req.getParameter("nation");
		String interest = req.getParameter("interest");
		
		//사용자의 요청 데이터를 Board 객체에 저장
		
		Member member = new Member();
		member.setMemberId(smemberId);
		member.setName(name);
		member.setEmail(email);
		member.setBirthday(birthday);
		member.setCountry_code(country_code);
		member.setPhone(phone);
		member.setGender(gender);
		member.setNation(nation);
		member.setInterest(interest);
		
		//사용자 수정 처리
		MemberService memberService = new MemberService();
		MemberService.updateMember(member);

		resp.sendRedirect("/seoul/mypage.action");
	}
}