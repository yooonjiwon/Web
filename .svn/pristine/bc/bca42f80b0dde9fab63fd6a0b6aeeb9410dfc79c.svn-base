package com.seoul.informationservlet;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import com.seoul.common.Util;

@WebServlet(value = "/Information/write.action")
public class InformationWriteServlet extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

		RequestDispatcher dispatcher = 
			req.getRequestDispatcher("/WEB-INF/views/information/write.jsp");
		dispatcher.forward(req, resp);
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");

		//파일 업로드를 포함한 요청인지 확인 (multipart/form-data 형식 확인)
		if(ServletFileUpload.isMultipartContent(req) == false){
		 	resp.sendRedirect("list.action");
		 	return;
		 }

		// 경로 문자열을 저장할 변수
		// application.getRealPath('웹경로') : 가상경로(웹 경로) -> 물리경로(컴퓨터 경로)
		// http://..... -> C:/.....
		ServletContext application = req.getServletContext();
		String path = application.getRealPath("/WEB-INF/files"); //최종 파일 저장 경로
		String tempPath = application.getRealPath("/WEB-INF/temp"); //임시 파일 저장 경로

		// 전송데이터를 각 요소별로 분리하여 개별 객체를 만들때 사용할 처리기
		DiskFileItemFactory factory = new DiskFileItemFactory();
		factory.setSizeThreshold(1024*1024*2);
		factory.setRepository(new File(tempPath));

		// 요청 정보를 읽을 파서(Parser)생성(요청을 읽고 요소별로 분리)
		ServletFileUpload uploader = new ServletFileUpload(factory);
		uploader.setFileSizeMax(1024*1024*10); //최대 파일 크기
		

//////////////////////////////////////////////////////////////////////////////////

	/*	//게시글 등록 처리
		BoardService boardService = new BoardService();
		int newBoardNo = boardService.writeBoard(board);
		for (BoardAttach attachment : attachments) {
			attachment.setBoardNo(newBoardNo);
			boardService.saveBoardAttach(attachment);
		}*/
		
		resp.sendRedirect("/seoul/information/list.action");
	}
}

